# ------------------------------- configuration for Event -------------------------------------#
particle_types:
  digis:
    amount: 'digi_nDigis'
    attributes:
      wh: 
        branch: 'digi_wheel'
      sc: 
        branch: 'digi_sector'
      st: 
        branch: 'digi_station'
      sl: 
        branch: 'digi_superLayer'
      w: 
        branch: 'digi_wire'
      l: 
        branch: 'digi_layer'
      time: 
        branch: 'digi_time'
      BX:
        expr: 'time // 25 if time is not None else None'
    sorter:
      by: 'p.BX'
  segments:
    amount: 'seg_nSegments'
    attributes:
      wh: 
        branch: 'seg_wheel'
      sc: 
        branch: 'seg_sector'
      st: 
        branch: 'seg_station'
      phi: 
        branch: 'seg_posGlb_phi'
      eta: 
        branch: 'seg_posGlb_eta'
      nHits_phi: 
        branch: 'seg_phi_nHits'
      nHits_z: 
        branch: 'seg_z_nHits'
      t0_phi: 
        branch: 'seg_phi_t0'
      pos_locx_sl1: 
        branch: 'seg_posLoc_x_SL1'
      pos_locx_sl3: 
        branch: 'seg_posLoc_x_SL3'
      matched_genmuons: []
      matched_tps: []
  tps:  
    amount: 'ph2TpgPhiEmuAm_nTrigs'
    attributes:
      wh: 
        branch: 'ph2TpgPhiEmuAm_wheel'
      sc: 
        branch: 'ph2TpgPhiEmuAm_sector'
      st: 
        branch: 'ph2TpgPhiEmuAm_station'
      sl:
        branch: 'ph2TpgPhiEmuAm_superLayer'
      phi: 
        branch: 'ph2TpgPhiEmuAm_phi'
      phiB: 
        branch: 'ph2TpgPhiEmuAm_phiB'
      posLoc_x:
        branch: 'ph2TpgPhiEmuAm_posLoc_x'
      dirLoc_phi:
        branch: 'ph2TpgPhiEmuAm_dirLoc_phi'
      quality: 
        branch: 'ph2TpgPhiEmuAm_quality'
      rpcFlag: 
        branch: 'ph2TpgPhiEmuAm_rpcFlag'
      _BX: # first get the BX from the branch
        branch: 'ph2TpgPhiEmuAm_BX'
      BX: # then re-define the BX attribute to center it at 0
        expr: '_BX - 20'
      phires_conv:
        expr: '65536.0 / 0.5'
      matched_segments: []
      matched_genmuons: []
      matched_showers: []
    filter: 'p.quality >= 0'
  genmuons:
    amount: 'gen_nGenParts'
    attributes:
      pt: 
        branch: 'gen_pt'
      eta: 
        branch: 'gen_eta'
      phi: 
        branch: 'gen_phi'
      charge: 
        branch: 'gen_charge'
      matched_segments: []
      matched_tps: []
      showered: False
    filter: 'abs(ev.gen_pdgId[p.index]) == 13'
    sorter:
      by: 'p.pt'
      reverse: True
  fwshowers:
    amount: 'ph2Shower_station'
    attributes:
      wh: 
        branch: 'ph2Shower_wheel'
      sc: 
        branch: 'ph2Shower_sector'
      st: 
        branch: 'ph2Shower_station'
      sl: 
        branch: 'ph2Shower_superlayer'
      nDigis: 
        branch: 'ph2Shower_ndigis'
      BX: 
        branch: 'ph2Shower_BX'
      min_wire: 
        branch: 'ph2Shower_min_wire'
      max_wire: 
        branch: 'ph2Shower_max_wire'
      avg_pos: 
        branch: 'ph2Shower_avg_pos'
      avg_time: 
        branch: 'ph2Shower_avg_time'
      wires_profile: 
        branch: 'ph2Shower_wires_profile'
      matched_tps: []
  simhits:
    amount: 'simHit_nSimHits'
    attributes:
      wh: 
        branch: 'simHit_wheel'
      sc: 
        branch: 'simHit_sector'
      st: 
        branch: 'simHit_station'
      sl: 
        branch: 'simHit_superLayer'
      l: 
        branch: 'simHit_layer'
      w: 
        branch: 'simHit_wire'
      process_type: 
        branch: 'simHit_processType'
      particle_type: 
        branch: 'simHit_particleType'

# -------------------------------- configuration for NTuple --------------------------------------#
ntuple_tree_name: '/dtNtupleProducer/DTTREE'

# =============== available preprocessors - dtntuple ================= #
ntuple_preprocessors:
  genmuon_matcher:
    src: "dtpr.utils.genmuon_functions.analyze_genmuon_matches"
  real_shower_builder:
    src: "dtpr.utils.shower_functions.build_real_showers"
    kwargs:
      threshold: 8
      debug: False
  genmuon_showerer:
    src: "dtpr.utils.genmuon_functions.analyze_genmuon_showers"
    kwargs:
      method: 3 # 1: using offline segments, 2: using simhits, 3: using real showers
  fw_shower_analyzer:
    src: "dtpr.utils.shower_functions.analyze_fwshowers"
  filter_matching:
    src: "filter_main.barrel_filter_analyzer"
    kwargs:
      only4true_showers: False
  showers-classifier:
    src: "showers_classification.highpt_showers_identifier"
    kwargs:
      highpt_threshold: 1000
# ================= available selectors - dtntuple ================= #
ntuple_selectors:
  baseline:
    src: "dtpr.utils.filters.base_filters.baseline"

# -------------------------------- configuration for histograms -----------------------------------#
histo_sources:
  - barrel_filter_histograms

histo_names:
  - shower_showeredgenmuon_tag_eff_pttrend
  - shower_matchAmTP_eff_MB1
  - shower_matchAmTP_eff_MB2
  - shower_matchAmTP_eff_MB3
  - shower_matchAmTP_eff_MB4
  - shower_matchHighPtmuon_eff_MB1
  - shower_matchHighPtmuon_eff_MB2
  - shower_matchHighPtmuon_eff_MB3
  - shower_matchHighPtmuon_eff_MB4
  - shower_matchshoweredgenmuon_eff_MB1
  - shower_matchshoweredgenmuon_eff_MB2
  - shower_matchshoweredgenmuon_eff_MB3
  - shower_matchshoweredgenmuon_eff_MB4
