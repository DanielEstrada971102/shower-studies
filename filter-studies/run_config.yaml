# ------------------------------- configuration for Event -------------------------------------#
particle_types:
  digis:
    amount: 'digi_nDigis'
    branches:
      wh: 'digi_wheel'
      sc: 'digi_sector'
      st: 'digi_station'
      sl: 'digi_superLayer'
      w: 'digi_wire'
      l: 'digi_layer'
      time: 'digi_time'
    attributes:
      BX:
        expr: 'time // 25 if time is not None else None'
    sorter:
      by: 'p.BX'
  segments:
    class: 'dtpr.particles.Segment'
    amount: 'seg_nSegments'
    branches:
      wh: 'seg_wheel'
      sc: 'seg_sector'
      st: 'seg_station'
      phi: 'seg_posGlb_phi'
      eta: 'seg_posGlb_eta'
      nHits_phi: 'seg_phi_nHits'
      nHits_z: 'seg_z_nHits'
      t0_phi: 'seg_phi_t0'
      pos_locx_sl1: 'seg_posLoc_x_SL1'
      pos_locx_sl3: 'seg_posLoc_x_SL3'
  genmuons:
    class: 'dtpr.particles.GenMuon'
    amount: 'gen_nGenParts'
    branches:
      pt: 'gen_pt'
      eta: 'gen_eta'
      phi: 'gen_phi'
      charge: 'gen_charge'
    attributes:
      matches: []
      matched_segments_stations: []
      showered: False
    filter: 'abs(ev.gen_pdgId[p.index]) == 13'
    sorter:
      by: 'p.pt'
      reverse: True
  tps:  
    amount: 'ph2TpgPhiEmuAm_nTrigs'
    branches:
      wh: 'ph2TpgPhiEmuAm_wheel'
      sc: 'ph2TpgPhiEmuAm_sector'
      st: 'ph2TpgPhiEmuAm_station'
      sl: 'ph2TpgPhiEmuAm_superLayer'
      phi: 'ph2TpgPhiEmuAm_phi'
      phiB: 'ph2TpgPhiEmuAm_phiB'
      BX: 'ph2TpgPhiEmuAm_BX'
      quality: 'ph2TpgPhiEmuAm_quality'
      rpcFlag: 'ph2TpgPhiEmuAm_rpcFlag'
      posLoc_x: 'ph2TpgPhiEmuAm_posLoc_x'
      dirLoc_phi: 'ph2TpgPhiEmuAm_dirLoc_phi'
    attributes:
      # BX:
      #   expr: 'BX - 20' # Correct to center BX at 0
      phires_conv:
        expr: '65536.0 / 0.5'
      phi:
        expr: phi / phires_conv + 3.14159 / 6 * (sc - 1)
      phiB:
        expr: phiB / phires_conv + 3.14159 / 6 * (sc - 1)
      dirLoc_phi:
        expr: dirLoc_phi * -1 # Correct direction according to the plots... It is necessary to check
      matches: []
      matches_with_segment: False
      matched_showers: []
    filter: 'p.quality >= 0'
  fwshowers:
    amount: 'ph2Shower_station'
    branches:
      wh: 'ph2Shower_wheel'
      sc : 'ph2Shower_sector'
      st: 'ph2Shower_station'
      sl: 'ph2Shower_superlayer'
      nDigis: 'ph2Shower_ndigis'
      BX: 'ph2Shower_BX'
      min_wire: 'ph2Shower_min_wire'
      max_wire: 'ph2Shower_max_wire'
      avg_pos: 'ph2Shower_avg_pos'
      avg_time: 'ph2Shower_avg_time'
      wires_profile: 'ph2Shower_wires_profile'
    attributes:
      matched_tps: []
  simhits:
    amount: 'simHit_nSimHits'
    branches:
      wh: 'simHit_wheel'
      sc: 'simHit_sector'
      st: 'simHit_station'
      sl: 'simHit_superLayer'
      l: 'simHit_layer'
      w: 'simHit_wire'
      process_type: 'simHit_processType'
      particle_type: 'simHit_particleType'

# -------------------------------- configuration for NTuple --------------------------------------#
ntuple_tree_name: '/dtNtupleProducer/DTTREE'

# =============== available preprocessors - dtntuple ================= #
ntuple_preprocessors:
  real_shower_builder:
    src: "dtpr.utils.shower_functions.build_real_showers"
    kwargs:
      threshold: 8
      debug: False
  fw_shower_analyzer:
    src: "dtpr.utils.shower_functions.analyze_fwshowers"
  filter_matching:
    src: "filter_main.barrel_filter_analyzer"
    kwargs:
      only4true_showers: False
# ================= available selectors - dtntuple ================= #
# ntuple_selectors:
#   baseline:
#     src: "dtpr.utils.filters.base_filters.baseline"

# -------------------------------- configuration for histograms -----------------------------------#
histo_sources:
  # define the source modules of the histograms
  # - dtpr.utils.histograms.baseHistos
  # - dtpr.utils.histograms.am_histos
  # - dtpr.utils.histograms.digi_histos
  # - dtpr.utils.histograms.shower_histos
  - barrel_filter_histograms

histo_names:
  - tps_q<6_MB1
  - tps_q<6_MB2
  - tps_q<6_MB3
  - tps_q<6_MB4
  - tps_q>6_MB1
  - tps_q>6_MB2
  - tps_q>6_MB3
  - tps_q>6_MB4
  - showers_MB1
  - showers_MB2
  - showers_MB3
  - showers_MB4
  - showers_true_MB1
  - showers_true_MB2
  - showers_true_MB3
  - showers_true_MB4
  - tps_match_showers_MB1
  - tps_match_showers_MB2
  - tps_match_showers_MB3
  - tps_match_showers_MB4
  - matched_tps_MB1
  - matched_tps_MB2
  - matched_tps_MB3
  - matched_tps_MB4
  # - at_least_oneTP_for_real_shower_MB1
  # - at_least_oneTP_for_real_shower_MB2
  # - at_least_oneTP_for_real_shower_MB3
  # - at_least_oneTP_for_real_shower_MB4
  # - tps_x_MB1
# ----------------------------- configuration for event inspector ---------------------------------#
inspector-functions:
  # define the functions to be used in the event inspector in the format:
  func1:
    src: "functions.print_event"

# ------------------------------- configuration for dt plots  -------------------------------------#
dt_plots_configs:
  mplhep-style: 'CMS'         # Style to use for the plots

  figure-configs: 
    figure.dpi: 100             # Dots per inch (resolution)
    axes.titlesize: 'small'     # Axes title size
    axes.labelsize: 'x-small'    # Axes label size
    xtick.labelsize: 'x-small'    # X-axis tick label size
    ytick.labelsize: 'x-small'    # Y-axis tick label size
    legend.fontsize: 'small'   # Legend font size

  dt-cell-info:
    particle_type: 'digis'      # Particle type to use
    cmap_var: 'time'            # Variable to use for the colormap

  cmap-configs:
    cmap: 'viridis'             # Colormap to use
    cmap_under: 'none'          # Color for values under vmin
    norm:
      class: 'matplotlib.colors.Normalize'  # Normalization class
      vmin: 299                             # Minimum value for normalization
      vmax: 1000                            # Maximum value for normalization

  # DT bounds and cells are matplotlib.patches.Rectangle objects
  bounds-kwargs:
    facecolor: ["lightgray", "lightyellow", "lightpink", "lightblue"]   # Color of the rectangle [MB, SL1, SL3, SL2]
    edgecolor: "k"                                                      # Color of the edge
    alpha: 0.3                                                          # Transparency of the rectangle
    linewidth: 0.5                                                      # Width of the edge

  cells-kwargs:
    edgecolor: "k"              # Color of the edge
    linewidth: 0.025              # Width of the edge
